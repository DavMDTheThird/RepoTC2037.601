# Resaltador de Sintáxis - DOCUMENTACIÓN


### Names:
- David Medina Domínguez (A01783155)
- Angel Afonso Castellanos (A01782545)

## Solucion Planteada:

```{elixir}
codigo
```

Reflexiona sobre la solución planteada, los algoritmos implementados y sobre el tiempo de ejecución de estos.


A continuacion se presenta la complejidad de cada una de las funciones que fueron utilizadas en el desarrollo del resaltador de sintáxis.

### File.stream

La complejidad temporal es constante, O(1), ya que solo crea un objeto de flujo y no realiza ninguna lectura o procesamiento real del archivo.

### Enum.map

La complejidad temporal depende del tamaño de la enumeración y de la complejidad de la función de transformación que se aplica a cada elemento. Si consideramos el tamaño de la enumeración como n y la complejidad de la función de transformación como O(f), donde f es el tiempo que tarda en ejecutarse la función de transformación en un solo elemento, entonces la complejidad temporal de Enum.map es O(n * f).

### Enum.join

La complejidad temporal depende del tamaño de la enumeración y de la longitud de cada elemento en la enumeración. Si consideramos el tamaño de la enumeración como n y la longitud promedio de los elementos como m, entonces la complejidad temporal de Enum.join es O(n * m).

### Regex.match?

La complejidad temporal depende del patrón de expresión regular y la longitud de la cadena de entrada. La complejidad de la coincidencia de expresiones regulares puede variar según el patrón y el motor de regex utilizado. Basicamente sería O(n).

### Regex.replace

La complejidad temporal depende del patrón de expresión regular, la longitud de la cadena de entrada y la complejidad de la transformación realizada. La complejidad de reemplazo de expresiones regulares puede variar según el patrón y el motor de regex utilizado. Basicamente sería O(n).

### Regex.run

La complejidad temporal depende del tamaño de la cadena de entrada y la complejidad del patrón de expresión regular. La complejidad de coincidencia de expresiones regulares puede variar según el patrón y el motor de regex utilizado. Basicamente sería O(n).

### IO.puts

La complejidad temporal es generalmente considerada como O(1), es decir, constante. Esto se debe a que la función simplemente imprime el texto proporcionado en la salida estándar y agrega un salto de línea al final. El tiempo que lleva imprimir una cadena de texto y un carácter de nueva línea no depende del tamaño de la cadena.

<br>

## Implicaciones éticas

Con el uso y desarrollo de tecnología como un resultador de sintáxis puede presentar diversas implicaciones éticas en la sociedad, un ejemplo de ellas pueden ser las siguieentes:

### 1. Seguridad y Privacidad: 
Si el producto es utilizado en aplicaciones o plataformas web, puede existir el riesgo de que los datos de sintáxis de los usuarios sean recopilados y almacenados, lo cual implica la preocupacion sobre la privacidad de los individuos y existe la posibilidad de que estos datos sean utilizados de manera maliciosa o sean vulnerables a ataques cibernéticos.

### 2. Discriminación: 
Al tener una tecnología desarrollada por humanos y estas son entrenadas utilizando un gran conjunto de datos que tienen la posibilidad de contener algun sesgo cultural, resultando en malos resultados que impliquen la discriminación. Si se desarrollara con datos que implican estereotipos de cualquier tipo, podrian generar que se resalten algo que implique promover estos esterotipos.

### 3. Barreras lingüisticas:
El resaltador de sintáxis puede encontrarse con situaciones que limiten la interaccion con ciertos grupos regiones, en nuestro caso implicaria a aquellos grupos sociales que no tengan el mismo abecedario que los desarrolladores del código, sin poder tomar en cuenta las variaciones del dialecto, limitando la oportunidad de uso del programa.

### 4. Dependencia:
El uso excesivo de la tecnologia del resaltador de sintaxis podría generar una dependencia a la misma, confiarse demasiado de este tipo de herramientas que busca corregir la sintáxis podría evocar en la perdida de la capacidad de desarrollo y comprensión.

### 5. Automatización de trabajo:
Al ser una herramienta precisa reduce la necsidad de profesionales especializados en esta rama, teniendo repercusiones economicas/laborales para aquellos que ocupan dichos trabajos.

### 6. Poco contexto:
[[https://github.com/username/repository/blob/master/img/octocat.png|alt=octocat]]
[[https://github.com/DavMDTheThird/RepoTC2037.601.git/ResaltadorSintaxis/Img1.jpg|alt=hola]]


El uso de tecnologías basadas en sintáxis en codigo implica que es difícil saber qué es lo que es y qué no es, esto implica una confusion a la hora de identificar el significa de lo que se esta leyendo.

En conclusión, es vital tener en cuenta estas implicaciones éticas para poder abordarlas de la mejor manera y evitar que la implementación de esta tecnología tenga consecuencias de las mismas, minimizando efectos negativos o errores.